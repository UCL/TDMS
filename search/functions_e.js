var searchData=
[
  ['test_5fcase_320',['TEST_CASE',['../test__BLi__vs__cubic__interpolation_8cpp.html#ae2da8b03fb4b6f44dd7cc21624ecac00',1,'TEST_CASE(&quot;Benchmark: BLi is better than cubic interpolation&quot;):&#160;test_BLi_vs_cubic_interpolation.cpp'],['../test__field__interpolation_8cpp.html#a83fca7c4f05717a241dc12c0b11342a2',1,'TEST_CASE(&quot;E-field interpolation check&quot;):&#160;test_field_interpolation.cpp'],['../test__field__interpolation_8cpp.html#ad77e4dfcc662db5e3d7fbbea7fcf5ccf',1,'TEST_CASE(&quot;H-field interpolation check&quot;):&#160;test_field_interpolation.cpp'],['../test__interpolation__determination_8cpp.html#a37a56e55613b0410b0e3894794a394a6',1,'TEST_CASE(&quot;checkInterpolationPoints: exceptions thrown&quot;):&#160;test_interpolation_determination.cpp'],['../test__interpolation__determination_8cpp.html#a88357891188708d4298113a51302fdf0',1,'TEST_CASE(&quot;checkInterpolationPoints: check valid inputs&quot;):&#160;test_interpolation_determination.cpp'],['../test__interpolation__determination_8cpp.html#a94ea2527c5944c8b928b52a3e7d0c0a8',1,'TEST_CASE(&quot;best_interp_scheme: correct interpolation chosen&quot;):&#160;test_interpolation_determination.cpp'],['../test__interpolation__functions_8cpp.html#a8cd1d078e64e910e73b215be6901d3a2',1,'TEST_CASE(&quot;test_interpolation_functions: testing that cubic interpolation is exact&quot;):&#160;test_interpolation_functions.cpp'],['../test__interpolation__functions_8cpp.html#a0280f29451a037b48a01c2990dae70cf',1,'TEST_CASE(&quot;bandlimited_interpolation: check that the interpolation constant values all sum to the same value&quot;):&#160;test_interpolation_functions.cpp'],['../test__interpolation__functions_8cpp.html#a715ec5ce34344c0744a14d2c83e31f04',1,'TEST_CASE(&quot;(real-valued) Band limited interpolation: constant function&quot;):&#160;test_interpolation_functions.cpp'],['../test__interpolation__functions_8cpp.html#a5bc0db44637deb2cd9767d4b91c41276',1,'TEST_CASE(&quot;(real-valued) Band limited interpolation: sin(2 pi x)&quot;):&#160;test_interpolation_functions.cpp'],['../test__interpolation__functions_8cpp.html#ae55266e0873a11a37e901e870fa7ea65',1,'TEST_CASE(&quot;(real-valued) Band limited interpolation: compact pulse&quot;):&#160;test_interpolation_functions.cpp'],['../test__interpolation__functions_8cpp.html#a8da3d3c727c8210af079fea9905be9e9',1,'TEST_CASE(&quot;(complex-valued) Band limited interpolation&quot;):&#160;test_interpolation_functions.cpp'],['../test__numerical__derivative_8cpp.html#a61d20d0fe20a2cc56441a5cbad09226d',1,'TEST_CASE(&quot;Element-by-element multiplication of array of complex numbers&quot;):&#160;test_numerical_derivative.cpp'],['../test__numerical__derivative_8cpp.html#acd950a07968046b93bee2605b348effb',1,'TEST_CASE(&quot;Numerical derivative&quot;):&#160;test_numerical_derivative.cpp'],['../test__openandorder_8cpp.html#abe60ba6413f784ce3e0fdb63cd293694',1,'TEST_CASE(&quot;Test argument parsing&quot;):&#160;test_openandorder.cpp']]],
  ['triangulatecuboid_321',['triangulateCuboid',['../mesh__base_8h.html#af542151614a30a9fea3279e6730463fd',1,'mesh_base.cpp']]],
  ['triangulateplane_322',['triangulatePlane',['../mesh__base_8h.html#a33e5a5bb9c09e69af86409399ddfdce9',1,'mesh_base.cpp']]],
  ['triangulateplaneskip_323',['triangulatePlaneSkip',['../mesh__base_8h.html#a5f577c512f3cce916d1effaf7275d46b',1,'mesh_base.cpp']]]
];
