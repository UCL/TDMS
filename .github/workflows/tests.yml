name: Run tests

on:
  push:
    branches: "main"
  pull_request:
  release:
  workflow_dispatch:

jobs:
  tests:
    name: Test - ${{ matrix.os }} - ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        build_type:
          - Release
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache test data
        id: cache-test-data
        uses: actions/cache@v3
        with:
          path: test_data
          key: test_data

      - name: Copy test data
        if: steps.cache-test-data.outputs.cache-hit == 'true'
        run: cp -r test_data/ ${GITHUB_WORKSPACE}/tdms/tests/system/data

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libfftw3-dev libgomp1 python3
          pip install -r ${GITHUB_WORKSPACE}/tdms/tests/requirements.txt
      - name: Create Build Environment
        run: |
          cmake -E make_directory ${{runner.workspace}}/build
      - name: Configure TDMS
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake ${GITHUB_WORKSPACE}/tdms -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      - name: Build TDMS
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          cmake --build . --config ${{ matrix.build_type }}
      - name: Test TDMS
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          export OMP_NUM_THREADS=1
          py.test ${GITHUB_WORKSPACE}/tdms/tests/system/test_arc01.py

      - name: Cache test data
        if: steps.cache-test-data.outputs.cache-hit != 'true'
        run: cp -r ${GITHUB_WORKSPACE}/tdms/tests/system/data/ test_data/
