name: Run tests

on:
  push:
    branches: ["main"]
  pull_request:
  release:
  workflow_dispatch:

jobs:
  tests:
    name: Test - ${{ matrix.os }} - ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        build_type:
          - Release
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup cache
        id: cache-test-data
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/tdms/tests/system/data
          key: test_data

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      - name: Install dependencies Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libfftw3-dev libgomp1 python3
          pip install -r ${GITHUB_WORKSPACE}/tdms/tests/requirements.txt

      - name: Install miniconda Windows
        if: runner.os == 'Windows'
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9

      - name: Install dependinces Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          conda install fftw cmake --yes

      - name: Create Build Environment
        run: |
          cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure TDMS
        shell: bash
        working-directory: ${{runner.workspace}}/build
        env:
          CXXFLAGS: -Werror
        run: |
          cmake ${GITHUB_WORKSPACE}/tdms -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build TDMS
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          cmake --build . --config ${{ matrix.build_type }}

      - name: Run TDMS unit tests
        working-directory: ${{runner.workspace}}/build
        run: |
          ctest -C ${{ matrix.build_type }} --extra-verbos

      - name: Run TDMS system tests
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          export OMP_NUM_THREADS=1
          py.test ${GITHUB_WORKSPACE}/tdms/tests/system/ -s -x
