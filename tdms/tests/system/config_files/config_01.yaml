# A string containing the test_id
test_id: '01'
# After the initial test_id key, all remaining keys are interpretted as the names of .mat files containing input data for one or more runs of TDMS that make up this system test.
# If the .mat extension is ommitted from a key, it will be automatically appended by Python during the generation and testing process.
# The key below indicates that we must generate a .mat input file called fs_input.mat, for example. The block it defines then contains the options for regenerating that file.
fs_input:
  # The file that is passed to iteratefdtd_matrix in run_bscan
  input_file: input_file_01.m
  # The obstacle that is present in the simulation. Should be one of "fs" (freespace), "sph" (sphere), "cyl" (cylindrical), "sc" (point-source)
  obstacle: fs
  # The radius of the non-freespace obstacle in microns, if applicable. For "sph", the radius of the sphere. For "cyl", the radius of the circular faces. Other obstacles ignore this input. Defaults to 15.e-6 if not set.
  obstacle_radius: 15.e-6
  # Whether iteratefdtd_matrix must be called in illsetup mode to setup the illumination file, prior to its call in filesetup mode. Defaults to False if not present or unpopulated
  illsetup: False
  # The (relative) refractive index of the scattering obstacle. Defaults to 1.42 if not provided.
  refind: 1.42
  # Whether the time-domain field needs to be computed prior to defining the scattering matrix and other material properties. Defaults to False if not present.
  calc_tdfield: False
  # One of pstd (pseudo-spectral time domain), fdtd (finite difference time domain). The time-propagation solver method to use. Defaults to fdtd if not present.
  solver_method: pstd
  # One of cubic (cubic) or bli (bandlimited). The interpolation method to use when extracting field values at spatial locations off the computational grid. Defaults to cubic if not present.
  interpolation: cubic
  # This block defines the runs of tdms for which this .mat file is an input.
  # Each tag defines the name of one particular run, and contains any runtime options that should be passed to TDMS for that particular run only.
  # Runs can share the same name, however for debugging and descriptive purposes it is advisible to provide each run with a unique name.
  runs:
    # Defines a run called "fs_bli"; specifically this means that the (run) command
    # tdms fs_input.mat output_{test_id}_fs_bli.mat
    # will be executed as part of this system test.
    fs_cubic:
      # The reference file to compare the output of the TDMS run to, to check that TDMS behaviour has not been changed unexpectedly.
      reference: fs_cubic_reference.mat
    # We could start another block here, defining another run that uses the fs_input.mat file.
# Declares another input .mat file that needs to be created.
fs_bli_input:
  # The adjust syntax means that this input will use the same settings as the "fs_input.mat" file, unless they are explicitly overwritten in this block.
  adjust: fs_input
  # Input file is created with bandlimited interpolation flagged. This takes higher proority over the "cubic" value provided in the "fs_input" block above, which we are adjusting.
  interpolation: bli
  # Runs using this input file, "fs_bli_input.mat" are declared in the same way as blocks that do not use the "adjust" syntax.
  runs:
    fs_bli:
      reference: fs_bli_reference.mat
cyl_input:
  input_file: input_file_01.m
  obstacle: cyl
  obstacle_radius:
  illsetup:
  refind: 1.42
  solver_method: pstd
  runs:
    cyl_cubic:
      reference: cyl_cubic_reference.mat
cyl_bli_input:
  adjust: cyl_input
  interpolation: bli
  runs:
    cyl_bli:
      reference: cyl_bli_reference.mat
